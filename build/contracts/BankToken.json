{
  "contractName": "BankToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract MattCoin",
          "name": "_mattCoin",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_cUSD",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cUSD",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "mattCoin",
      "outputs": [
        {
          "internalType": "contract MattCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingCoins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "flexible",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "flexible",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MattCoin\",\"name\":\"_mattCoin\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_cUSD\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cUSD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mattCoin\",\"outputs\":[{\"internalType\":\"contract MattCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flexible\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flexible\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BankToken.sol\":\"BankToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/BankToken.sol\":{\"keccak256\":\"0x7eb7737e240416c17a69feb112663da0ef1de249982d79c1d8d165973d07bc3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94cec3f3de5a0ec353a3196dd7cc24c2b362542ad23a4c4d615da43ba90cc195\",\"dweb:/ipfs/QmP8joEw9LLeJCFcsS9wdYd13Yd8p4vwDUKQmVS9m8qhEQ\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xec39881b4e37f6e9ca267d1b9e49c1980cd087bdf8a839c52567cf258ef0580a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4549eb22c075a850906848485142d5dae9656ca41c3c21b48cc1467eaf17c4c3\",\"dweb:/ipfs/QmV1CRXnWJoHqFQM97HK7zC7mC6seQTRDFrn71VgY4MNrH\"]},\"project:/contracts/MattCoin.sol\":{\"keccak256\":\"0x262c8aa158463b7793d9efbbbea1902cfb351552a6106323a6eb1d541d86dc09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d6b0bf1ce23a2e1f68831ff65c21e10e1774655baef2d53b1d77224ba62e8cb\",\"dweb:/ipfs/QmUWk892kLfEDMfgSoPJt62EeLjmGfry6biT6uznjuiEzc\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601081526020017f7374616b652042616e6b20546f6b656e0000000000000000000000000000000081525060019080519060200190620000519291906200014f565b503480156200005f57600080fd5b506040516200119e3803806200119e8339818101604052810190620000859190620002c2565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200036e565b8280546200015d9062000338565b90600052602060002090601f016020900481019282620001815760008555620001cd565b82601f106200019c57805160ff1916838001178555620001cd565b82800160010185558215620001cd579182015b82811115620001cc578251825591602001919060010190620001af565b5b509050620001dc9190620001e0565b5090565b5b80821115620001fb576000816000905550600101620001e1565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002318262000204565b9050919050565b6000620002458262000224565b9050919050565b620002578162000238565b81146200026357600080fd5b50565b60008151905062000277816200024c565b92915050565b60006200028a8262000224565b9050919050565b6200029c816200027d565b8114620002a857600080fd5b50565b600081519050620002bc8162000291565b92915050565b60008060408385031215620002dc57620002db620001ff565b5b6000620002ec8582860162000266565b9250506020620002ff85828601620002ab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035157607f821691505b6020821081141562000368576200036762000309565b5b50919050565b610e20806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde03146100675780631fccf6721461008557806320e1fc94146100a357806345bc78ab146100d357806376e3a5a414610106578063c99463a314610122575b600080fd5b61006f610140565b60405161007c9190610745565b60405180910390f35b61008d6101ce565b60405161009a91906107e6565b60405180910390f35b6100bd60048036038101906100b89190610844565b6101f4565b6040516100ca919061088a565b60405180910390f35b6100ed60048036038101906100e89190610844565b61020c565b6040516100fd94939291906108c0565b60405180910390f35b610120600480360381019061011b919061095d565b610249565b005b61012a610608565b60405161013791906109e5565b60405180910390f35b6001805461014d90610a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461017990610a2f565b80156101c65780601f1061019b576101008083540402835291602001916101c6565b820191906000526020600020905b8154815290600101906020018083116101a957829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060030154905084565b6000841161028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610aad565b60405180910390fd5b61029461062e565b6102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610b3f565b60405180910390fd5b8115610321576000811461031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610bd1565b60405180910390fd5b610365565b60008111610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b90610c63565b60405180910390fd5b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b81526004016103e493929190610c92565b602060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610cde565b506040518060800160405280858152602001848152602001831515815260200182815250600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030155905050811561057e576001600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105729190610d3a565b92505081905550610602565b80600261058b9190610d90565b600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fa9190610d3a565b925050819055505b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156106a457600190506106a9565b600090505b90565b600081519050919050565b600082825260208201905092915050565b60005b838110156106e65780820151818401526020810190506106cb565b838111156106f5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610717826106ac565b61072181856106b7565b93506107318185602086016106c8565b61073a816106fb565b840191505092915050565b6000602082019050818103600083015261075f818461070c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ac6107a76107a284610767565b610787565b610767565b9050919050565b60006107be82610791565b9050919050565b60006107d0826107b3565b9050919050565b6107e0816107c5565b82525050565b60006020820190506107fb60008301846107d7565b92915050565b600080fd5b600061081182610767565b9050919050565b61082181610806565b811461082c57600080fd5b50565b60008135905061083e81610818565b92915050565b60006020828403121561085a57610859610801565b5b60006108688482850161082f565b91505092915050565b6000819050919050565b61088481610871565b82525050565b600060208201905061089f600083018461087b565b92915050565b60008115159050919050565b6108ba816108a5565b82525050565b60006080820190506108d5600083018761087b565b6108e2602083018661087b565b6108ef60408301856108b1565b6108fc606083018461087b565b95945050505050565b61090e81610871565b811461091957600080fd5b50565b60008135905061092b81610905565b92915050565b61093a816108a5565b811461094557600080fd5b50565b60008135905061095781610931565b92915050565b6000806000806080858703121561097757610976610801565b5b60006109858782880161091c565b94505060206109968782880161091c565b93505060406109a787828801610948565b92505060606109b88782880161091c565b91505092959194509250565b60006109cf826107b3565b9050919050565b6109df816109c4565b82525050565b60006020820190506109fa60008301846109d6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a4757607f821691505b60208210811415610a5b57610a5a610a00565b5b50919050565b7f616d6f756e74206e6565647320746f20626520706f7369746976650000000000600082015250565b6000610a97601b836106b7565b9150610aa282610a61565b602082019050919050565b60006020820190508181036000830152610ac681610a8a565b9050919050565b7f6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000610b296023836106b7565b9150610b3482610acd565b604082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b7f666c657869626c65207374616b696e672073686f756c64206e6f74206861766560008201527f20666978656420706572696f6473000000000000000000000000000000000000602082015250565b6000610bbb602e836106b7565b9150610bc682610b5f565b604082019050919050565b60006020820190508181036000830152610bea81610bae565b9050919050565b7f6c6f636b6564207374616b696e672073686f756c64206861766520706f73697460008201527f69766520706572696f6473000000000000000000000000000000000000000000602082015250565b6000610c4d602b836106b7565b9150610c5882610bf1565b604082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b610c8c81610806565b82525050565b6000606082019050610ca76000830186610c83565b610cb46020830185610c83565b610cc1604083018461087b565b949350505050565b600081519050610cd881610931565b92915050565b600060208284031215610cf457610cf3610801565b5b6000610d0284828501610cc9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4582610871565b9150610d5083610871565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8557610d84610d0b565b5b828201905092915050565b6000610d9b82610871565b9150610da683610871565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ddf57610dde610d0b565b5b82820290509291505056fea2646970667358221220fc65385c67165f75678639f31fd0011258d87ceab724277fcabd9a27e97fb83764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde03146100675780631fccf6721461008557806320e1fc94146100a357806345bc78ab146100d357806376e3a5a414610106578063c99463a314610122575b600080fd5b61006f610140565b60405161007c9190610745565b60405180910390f35b61008d6101ce565b60405161009a91906107e6565b60405180910390f35b6100bd60048036038101906100b89190610844565b6101f4565b6040516100ca919061088a565b60405180910390f35b6100ed60048036038101906100e89190610844565b61020c565b6040516100fd94939291906108c0565b60405180910390f35b610120600480360381019061011b919061095d565b610249565b005b61012a610608565b60405161013791906109e5565b60405180910390f35b6001805461014d90610a2f565b80601f016020809104026020016040519081016040528092919081815260200182805461017990610a2f565b80156101c65780601f1061019b576101008083540402835291602001916101c6565b820191906000526020600020905b8154815290600101906020018083116101a957829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16908060030154905084565b6000841161028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610aad565b60405180910390fd5b61029461062e565b6102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610b3f565b60405180910390fd5b8115610321576000811461031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610bd1565b60405180910390fd5b610365565b60008111610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b90610c63565b60405180910390fd5b5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b81526004016103e493929190610c92565b602060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610cde565b506040518060800160405280858152602001848152602001831515815260200182815250600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030155905050811561057e576001600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105729190610d3a565b92505081905550610602565b80600261058b9190610d90565b600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fa9190610d3a565b925050819055505b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156106a457600190506106a9565b600090505b90565b600081519050919050565b600082825260208201905092915050565b60005b838110156106e65780820151818401526020810190506106cb565b838111156106f5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610717826106ac565b61072181856106b7565b93506107318185602086016106c8565b61073a816106fb565b840191505092915050565b6000602082019050818103600083015261075f818461070c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ac6107a76107a284610767565b610787565b610767565b9050919050565b60006107be82610791565b9050919050565b60006107d0826107b3565b9050919050565b6107e0816107c5565b82525050565b60006020820190506107fb60008301846107d7565b92915050565b600080fd5b600061081182610767565b9050919050565b61082181610806565b811461082c57600080fd5b50565b60008135905061083e81610818565b92915050565b60006020828403121561085a57610859610801565b5b60006108688482850161082f565b91505092915050565b6000819050919050565b61088481610871565b82525050565b600060208201905061089f600083018461087b565b92915050565b60008115159050919050565b6108ba816108a5565b82525050565b60006080820190506108d5600083018761087b565b6108e2602083018661087b565b6108ef60408301856108b1565b6108fc606083018461087b565b95945050505050565b61090e81610871565b811461091957600080fd5b50565b60008135905061092b81610905565b92915050565b61093a816108a5565b811461094557600080fd5b50565b60008135905061095781610931565b92915050565b6000806000806080858703121561097757610976610801565b5b60006109858782880161091c565b94505060206109968782880161091c565b93505060406109a787828801610948565b92505060606109b88782880161091c565b91505092959194509250565b60006109cf826107b3565b9050919050565b6109df816109c4565b82525050565b60006020820190506109fa60008301846109d6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a4757607f821691505b60208210811415610a5b57610a5a610a00565b5b50919050565b7f616d6f756e74206e6565647320746f20626520706f7369746976650000000000600082015250565b6000610a97601b836106b7565b9150610aa282610a61565b602082019050919050565b60006020820190508181036000830152610ac681610a8a565b9050919050565b7f6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f60008201527f7765640000000000000000000000000000000000000000000000000000000000602082015250565b6000610b296023836106b7565b9150610b3482610acd565b604082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b7f666c657869626c65207374616b696e672073686f756c64206e6f74206861766560008201527f20666978656420706572696f6473000000000000000000000000000000000000602082015250565b6000610bbb602e836106b7565b9150610bc682610b5f565b604082019050919050565b60006020820190508181036000830152610bea81610bae565b9050919050565b7f6c6f636b6564207374616b696e672073686f756c64206861766520706f73697460008201527f69766520706572696f6473000000000000000000000000000000000000000000602082015250565b6000610c4d602b836106b7565b9150610c5882610bf1565b604082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b610c8c81610806565b82525050565b6000606082019050610ca76000830186610c83565b610cb46020830185610c83565b610cc1604083018461087b565b949350505050565b600081519050610cd881610931565b92915050565b600060208284031215610cf457610cf3610801565b5b6000610d0284828501610cc9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d4582610871565b9150610d5083610871565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d8557610d84610d0b565b5b828201905092915050565b6000610d9b82610871565b9150610da683610871565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ddf57610dde610d0b565b5b82820290509291505056fea2646970667358221220fc65385c67165f75678639f31fd0011258d87ceab724277fcabd9a27e97fb83764736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2558:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "629:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "639:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "668:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "650:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "650:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "639:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_MattCoin_$746",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "621:7:4",
                "type": ""
              }
            ],
            "src": "568:112:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:95:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "768:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "809:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_MattCoin_$746",
                              "nodeType": "YulIdentifier",
                              "src": "775:33:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:40:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "765:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "765:51:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:59:4"
                  },
                  "nodeType": "YulIf",
                  "src": "755:79:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_MattCoin_$746",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "738:5:4",
                "type": ""
              }
            ],
            "src": "686:154:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "925:96:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "935:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "950:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "944:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "935:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1009:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_MattCoin_$746",
                      "nodeType": "YulIdentifier",
                      "src": "966:42:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:49:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "966:49:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_MattCoin_$746_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "903:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "911:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "919:5:4",
                "type": ""
              }
            ],
            "src": "846:175:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1086:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1125:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1107:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1096:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$438",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1068:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1078:7:4",
                "type": ""
              }
            ],
            "src": "1027:110:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1200:93:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1271:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1280:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1283:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1273:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1273:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1273:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1223:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1262:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$438",
                              "nodeType": "YulIdentifier",
                              "src": "1230:31:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1230:38:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1220:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:49:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1213:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:57:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1210:77:4"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$438",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1193:5:4",
                "type": ""
              }
            ],
            "src": "1143:150:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1376:94:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1401:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1395:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1386:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1458:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$438",
                      "nodeType": "YulIdentifier",
                      "src": "1417:40:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1417:47:4"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$438_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1354:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1362:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1370:5:4",
                "type": ""
              }
            ],
            "src": "1299:171:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1600:443:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1646:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1648:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1648:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1648:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1621:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1630:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1617:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1617:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1642:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1613:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1610:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1739:144:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1754:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1768:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1758:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1783:90:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1845:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1856:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1841:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1841:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1865:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_MattCoin_$746_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1793:47:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1793:80:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1783:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1893:143:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1908:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1922:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1912:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1938:88:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1998:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2009:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1994:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1994:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2018:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$438_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1948:45:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:78:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1938:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_MattCoin_$746t_contract$_IERC20_$438_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1562:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1573:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1585:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1593:6:4",
                "type": ""
              }
            ],
            "src": "1476:567:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2077:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2094:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2087:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2087:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2087:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2191:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2184:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2184:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2184:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2215:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2208:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2208:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2208:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2049:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2296:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2310:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2316:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2306:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2296:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2327:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2357:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2363:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2353:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2331:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2404:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2418:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2432:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2428:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2428:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2418:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2384:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2377:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2374:81:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2507:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2521:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2521:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2521:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2471:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2494:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2502:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2491:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2491:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2468:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2468:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2465:84:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2270:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2279:6:4",
                "type": ""
              }
            ],
            "src": "2235:320:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_MattCoin_$746(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_MattCoin_$746(value) {\n        if iszero(eq(value, cleanup_t_contract$_MattCoin_$746(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_MattCoin_$746_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_MattCoin_$746(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$438(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$438(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$438(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$438_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$438(value)\n    }\n\n    function abi_decode_tuple_t_contract$_MattCoin_$746t_contract$_IERC20_$438_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_MattCoin_$746_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$438_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13048:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:4",
                "type": ""
              }
            ],
            "src": "7:99:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:4",
                "type": ""
              }
            ],
            "src": "112:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:4",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:4"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:4"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:4"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:4",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:4"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:4",
                    "statements": []
                  },
                  "src": "365:113:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:4"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:4"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:4"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:4",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:4",
                "type": ""
              }
            ],
            "src": "287:307:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:4",
                "type": ""
              }
            ],
            "src": "600:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:4"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:4",
                "type": ""
              }
            ],
            "src": "708:364:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:4"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:4",
                "type": ""
              }
            ],
            "src": "1078:313:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1442:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1452:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1467:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1474:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1463:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1452:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1424:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1434:7:4",
                "type": ""
              }
            ],
            "src": "1397:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1561:28:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1571:12:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1578:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1571:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1547:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1557:3:4",
                "type": ""
              }
            ],
            "src": "1529:60:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1655:82:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1665:66:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1723:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1705:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1705:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1696:8:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:34:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1678:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:53:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1665:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1635:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1645:9:4",
                "type": ""
              }
            ],
            "src": "1595:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1803:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1813:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1857:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1826:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1813:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1783:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1793:9:4",
                "type": ""
              }
            ],
            "src": "1743:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1949:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1959:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2003:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1972:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1959:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$438_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1929:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1939:9:4",
                "type": ""
              }
            ],
            "src": "1875:140:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2100:80:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2117:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2167:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$438_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2122:44:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2122:51:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2110:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:64:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2110:64:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$438_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2088:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2095:3:4",
                "type": ""
              }
            ],
            "src": "2021:159:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2298:138:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2308:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2320:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2331:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2316:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2308:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2402:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2415:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2426:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2411:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$438_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2344:57:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:85:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2344:85:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2270:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2282:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2293:4:4",
                "type": ""
              }
            ],
            "src": "2186:250:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2482:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2492:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2508:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2502:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2492:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2475:6:4",
                "type": ""
              }
            ],
            "src": "2442:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2612:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2629:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2632:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2622:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2622:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2523:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2735:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2752:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2755:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2745:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2745:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2745:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2646:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2814:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2824:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2853:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2835:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2835:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2824:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2796:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2806:7:4",
                "type": ""
              }
            ],
            "src": "2769:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2914:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2971:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2980:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2983:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2973:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2973:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2973:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2937:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2962:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2944:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2944:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2934:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2934:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2927:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2927:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2924:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2907:5:4",
                "type": ""
              }
            ],
            "src": "2871:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3051:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3061:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3083:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3070:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3061:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3126:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3099:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3099:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3099:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3029:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3037:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3045:5:4",
                "type": ""
              }
            ],
            "src": "2999:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3210:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3256:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3258:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3258:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3258:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3231:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3240:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3227:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3227:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3252:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3223:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3220:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3349:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3364:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3378:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3368:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3393:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3428:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3439:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3424:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3424:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3448:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3403:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3403:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3393:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3180:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3191:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3203:6:4",
                "type": ""
              }
            ],
            "src": "3144:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3524:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3534:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3545:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3534:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3506:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3516:7:4",
                "type": ""
              }
            ],
            "src": "3479:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3627:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3644:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3667:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3649:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3649:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3637:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3615:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3622:3:4",
                "type": ""
              }
            ],
            "src": "3562:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3784:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3794:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3806:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3817:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3802:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3802:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3794:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3874:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3887:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3898:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3883:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3883:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3830:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3830:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3756:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3768:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3779:4:4",
                "type": ""
              }
            ],
            "src": "3686:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3956:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3966:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3991:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3984:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3984:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3977:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3977:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3966:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3938:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3948:7:4",
                "type": ""
              }
            ],
            "src": "3914:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4069:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4086:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4106:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4091:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4079:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4079:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4079:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4057:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4064:3:4",
                "type": ""
              }
            ],
            "src": "4010:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4301:365:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4311:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4323:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4334:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4319:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4319:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4311:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4392:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4405:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4416:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4401:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4401:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4348:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4348:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4473:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4486:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4497:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4482:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4482:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4429:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4429:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4549:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4562:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4573:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4558:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4558:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4511:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4511:66:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4511:66:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4631:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4644:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4655:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4640:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4640:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4587:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4587:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4249:9:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4261:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4269:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4277:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4285:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4296:4:4",
                "type": ""
              }
            ],
            "src": "4125:541:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4715:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4772:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4781:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4784:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4774:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4774:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4774:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4738:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4763:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4745:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4745:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4735:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4735:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4728:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4728:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4725:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4708:5:4",
                "type": ""
              }
            ],
            "src": "4672:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4852:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4862:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4884:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4871:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4862:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4927:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4900:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4900:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4900:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4830:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4838:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4846:5:4",
                "type": ""
              }
            ],
            "src": "4800:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4985:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5039:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5048:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5051:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5041:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5041:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5041:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5008:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5030:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5015:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5015:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5005:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5005:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4998:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4995:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4978:5:4",
                "type": ""
              }
            ],
            "src": "4945:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5116:84:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5126:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5148:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5135:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5135:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5126:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5188:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5164:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5164:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5164:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5094:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5102:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5110:5:4",
                "type": ""
              }
            ],
            "src": "5067:133:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5320:645:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5367:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5369:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5369:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5369:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5341:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5350:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5337:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5362:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5333:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5333:33:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5330:120:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5460:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5475:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5489:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5479:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5504:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5539:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5550:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5535:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5535:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5559:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5514:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5514:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5504:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5587:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5602:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5616:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5606:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5632:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5667:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5678:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5663:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5663:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5687:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5642:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5642:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5632:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5715:115:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5730:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5744:2:4",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5734:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5760:60:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5792:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5803:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5788:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5788:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5812:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5770:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5770:50:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5760:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5840:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5855:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5869:2:4",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5859:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5885:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5920:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5931:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5916:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5916:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5940:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5895:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5895:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5885:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5266:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5277:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5289:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5297:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5305:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5313:6:4",
                "type": ""
              }
            ],
            "src": "5206:759:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6047:66:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6057:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6101:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6070:30:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6070:37:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6057:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_MattCoin_$746_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6027:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6037:9:4",
                "type": ""
              }
            ],
            "src": "5971:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6200:82:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6217:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6269:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_MattCoin_$746_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6222:46:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6222:53:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6210:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6210:66:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6210:66:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_MattCoin_$746_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6188:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6195:3:4",
                "type": ""
              }
            ],
            "src": "6119:163:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6402:140:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6412:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6424:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6435:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6420:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6420:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6412:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6508:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6521:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6532:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6517:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6517:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_MattCoin_$746_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6448:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6448:87:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6448:87:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_MattCoin_$746__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6374:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6386:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6397:4:4",
                "type": ""
              }
            ],
            "src": "6288:254:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6576:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6593:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6596:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6586:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6586:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6690:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6693:4:4",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6683:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6683:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6683:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6714:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6717:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6707:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6707:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6707:15:4"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "6548:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6785:269:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6795:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6809:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6815:1:4",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6805:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6795:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6826:38:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6856:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6862:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6852:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6852:12:4"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6830:18:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6903:51:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6917:27:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6931:6:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6939:4:4",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6927:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6927:17:4"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6917:6:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6883:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6876:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6876:26:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6873:81:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7006:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7020:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7020:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7020:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6970:18:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6993:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7001:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6990:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6990:14:4"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6967:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6967:38:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6964:84:4"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6769:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6778:6:4",
                "type": ""
              }
            ],
            "src": "6734:320:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7166:71:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7188:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7196:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7184:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7184:14:4"
                      },
                      {
                        "hexValue": "616d6f756e74206e6565647320746f20626520706f736974697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7200:29:4",
                        "type": "",
                        "value": "amount needs to be positive"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7177:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7177:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7177:53:4"
                }
              ]
            },
            "name": "store_literal_in_memory_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7158:6:4",
                "type": ""
              }
            ],
            "src": "7060:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7389:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7399:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7465:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7470:2:4",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7406:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7406:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7399:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7571:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                      "nodeType": "YulIdentifier",
                      "src": "7482:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7482:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7595:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7600:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7591:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7591:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7584:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7377:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7385:3:4",
                "type": ""
              }
            ],
            "src": "7243:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7786:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7796:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7808:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7819:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7804:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7804:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7796:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7843:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7854:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7839:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7839:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7862:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7868:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7858:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7858:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7832:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7832:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7832:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7888:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8022:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7896:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7896:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7888:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7766:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7781:4:4",
                "type": ""
              }
            ],
            "src": "7615:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8146:116:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8168:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8176:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8164:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8164:14:4"
                      },
                      {
                        "hexValue": "6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8180:34:4",
                        "type": "",
                        "value": "only 1 stake per account is allo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8157:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8157:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8157:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8236:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8244:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8232:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8232:15:4"
                      },
                      {
                        "hexValue": "776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8249:5:4",
                        "type": "",
                        "value": "wed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8225:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8225:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8225:30:4"
                }
              ]
            },
            "name": "store_literal_in_memory_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8138:6:4",
                "type": ""
              }
            ],
            "src": "8040:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8414:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8424:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8490:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8495:2:4",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8431:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8431:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8424:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8596:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                      "nodeType": "YulIdentifier",
                      "src": "8507:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8507:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8507:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8609:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8620:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8625:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8616:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8609:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8402:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8410:3:4",
                "type": ""
              }
            ],
            "src": "8268:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8811:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8821:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8833:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8844:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8829:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8829:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8821:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8868:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8879:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8864:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8864:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8887:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8893:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8883:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8883:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8857:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8857:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8913:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9047:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8921:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8921:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8913:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8791:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8806:4:4",
                "type": ""
              }
            ],
            "src": "8640:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9171:127:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9193:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9201:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9189:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9189:14:4"
                      },
                      {
                        "hexValue": "666c657869626c65207374616b696e672073686f756c64206e6f742068617665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9205:34:4",
                        "type": "",
                        "value": "flexible staking should not have"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9182:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9182:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9261:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9269:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9257:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9257:15:4"
                      },
                      {
                        "hexValue": "20666978656420706572696f6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9274:16:4",
                        "type": "",
                        "value": " fixed periods"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9250:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9250:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9250:41:4"
                }
              ]
            },
            "name": "store_literal_in_memory_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9163:6:4",
                "type": ""
              }
            ],
            "src": "9065:233:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9450:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9460:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9526:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9531:2:4",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9467:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9467:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9460:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9632:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                      "nodeType": "YulIdentifier",
                      "src": "9543:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9543:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9543:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9645:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9656:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9661:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9652:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9652:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9645:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9438:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9446:3:4",
                "type": ""
              }
            ],
            "src": "9304:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9847:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9857:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9869:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9880:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9865:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9865:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9857:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9904:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9915:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9900:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9900:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9923:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9929:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9919:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9919:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9893:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9893:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9893:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9949:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10083:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9957:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9957:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9949:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9827:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9842:4:4",
                "type": ""
              }
            ],
            "src": "9676:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10207:124:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10229:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10237:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10225:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10225:14:4"
                      },
                      {
                        "hexValue": "6c6f636b6564207374616b696e672073686f756c64206861766520706f736974",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10241:34:4",
                        "type": "",
                        "value": "locked staking should have posit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10218:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10218:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10218:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10297:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10305:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10293:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10293:15:4"
                      },
                      {
                        "hexValue": "69766520706572696f6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10310:13:4",
                        "type": "",
                        "value": "ive periods"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10286:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10286:38:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10286:38:4"
                }
              ]
            },
            "name": "store_literal_in_memory_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10199:6:4",
                "type": ""
              }
            ],
            "src": "10101:230:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10483:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10493:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10559:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10564:2:4",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10500:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10500:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10493:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10665:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                      "nodeType": "YulIdentifier",
                      "src": "10576:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10576:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10576:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10678:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10689:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10694:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10685:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10685:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10678:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10471:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10479:3:4",
                "type": ""
              }
            ],
            "src": "10337:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10880:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10890:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10902:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10913:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10898:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10898:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10890:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10937:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10948:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10933:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10933:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10956:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10962:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10952:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10952:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10926:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10926:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10926:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10982:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11116:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10990:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10990:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10982:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10860:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10875:4:4",
                "type": ""
              }
            ],
            "src": "10709:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11199:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11216:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11239:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "11221:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11221:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11209:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11209:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11209:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11187:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11194:3:4",
                "type": ""
              }
            ],
            "src": "11134:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11412:288:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11422:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11434:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11445:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11430:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11430:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11422:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11502:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11515:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11526:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11511:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11511:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11458:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11458:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11458:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11583:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11596:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11607:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11592:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11592:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11539:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11539:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11539:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11665:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11678:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11689:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11674:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11674:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11621:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11621:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11621:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11368:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11380:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11388:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11396:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11407:4:4",
                "type": ""
              }
            ],
            "src": "11258:442:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11766:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11776:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11791:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11785:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11785:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11776:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11831:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "11807:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11807:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11744:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11752:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11760:5:4",
                "type": ""
              }
            ],
            "src": "11706:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11923:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11969:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11971:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11971:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11971:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11944:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11953:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11940:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11940:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11965:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11936:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11936:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "11933:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12062:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12077:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12091:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12081:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12106:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12149:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12160:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12145:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12145:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12169:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12116:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12116:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12106:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11893:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11904:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11916:6:4",
                "type": ""
              }
            ],
            "src": "11849:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12228:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12245:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12248:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12238:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12238:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12238:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12342:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12345:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12335:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12335:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12335:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12366:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12369:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12359:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12359:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12359:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12200:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12430:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12440:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12463:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12445:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12445:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12440:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12474:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12497:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12479:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12479:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12474:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12637:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12639:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12639:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12639:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12558:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12565:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12633:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12561:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12561:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12555:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12555:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "12552:107:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12669:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12680:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12683:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12676:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12676:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12669:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12417:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12420:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12426:3:4",
                "type": ""
              }
            ],
            "src": "12386:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12745:300:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12755:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12778:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12760:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12760:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12755:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12789:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12812:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12794:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12794:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12789:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12987:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12989:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12989:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12989:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12899:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12892:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12892:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12885:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12885:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12907:1:4"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12914:66:4",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12982:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12910:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12910:74:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12904:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12904:81:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12881:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12881:105:4"
                  },
                  "nodeType": "YulIf",
                  "src": "12878:131:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13019:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13034:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13037:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13030:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13030:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13019:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12728:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12731:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12737:7:4",
                "type": ""
              }
            ],
            "src": "12697:348:4"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$438_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$438_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$438_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$438_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_MattCoin_$746_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MattCoin_$746_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MattCoin_$746_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MattCoin_$746__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MattCoin_$746_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount needs to be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"only 1 stake per account is allo\")\n\n        mstore(add(memPtr, 32), \"wed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884(memPtr) {\n\n        mstore(add(memPtr, 0), \"flexible staking should not have\")\n\n        mstore(add(memPtr, 32), \" fixed periods\")\n\n    }\n\n    function abi_encode_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"locked staking should have posit\")\n\n        mstore(add(memPtr, 32), \"ive periods\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "281:2163:0:-:0;;;334:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;764:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;828:10;820:5;;:18;;;;;;;;;;;;;;;;;;859:9;848:8;;:20;;;;;;;;;;;;;;;;;;885:5;878:4;;:12;;;;;;;;;;;;;;;;;;764:133;;281:2163;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:110::-;1078:7;1107:24;1125:5;1107:24;:::i;:::-;1096:35;;1027:110;;;:::o;1143:150::-;1230:38;1262:5;1230:38;:::i;:::-;1223:5;1220:49;1210:77;;1283:1;1280;1273:12;1210:77;1143:150;:::o;1299:171::-;1370:5;1401:6;1395:13;1386:22;;1417:47;1458:5;1417:47;:::i;:::-;1299:171;;;;:::o;1476:567::-;1585:6;1593;1642:2;1630:9;1621:7;1617:23;1613:32;1610:119;;;1648:79;;:::i;:::-;1610:119;1768:1;1793:80;1865:7;1856:6;1845:9;1841:22;1793:80;:::i;:::-;1783:90;;1739:144;1922:2;1948:78;2018:7;2009:6;1998:9;1994:22;1948:78;:::i;:::-;1938:88;;1893:143;1476:567;;;;;:::o;2049:180::-;2097:77;2094:1;2087:88;2194:4;2191:1;2184:15;2218:4;2215:1;2208:15;2235:320;2279:6;2316:1;2310:4;2306:12;2296:22;;2363:1;2357:4;2353:12;2384:18;2374:81;;2440:4;2432:6;2428:17;2418:27;;2374:81;2502:2;2494:6;2491:14;2471:18;2468:38;2465:84;;;2521:18;;:::i;:::-;2465:84;2286:269;2235:320;;;:::o;281:2163:0:-;;;;;;;",
  "deployedSourceMap": "281:2163:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;379:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;532:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;471:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1010:1054;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;403:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;334:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;379:18::-;;;;;;;;;;;;;:::o;532:47::-;;;;;;;;;;;;;;;;;:::o;471:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1010:1054::-;1171:1;1161:7;:11;1153:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1246:14;:12;:14::i;:::-;1238:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1315:8;1311:252;;;1374:1;1364:6;:11;1339:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1311:252;;;1503:1;1494:6;:10;1486:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1311:252;1634:4;;;;;;;;;;;:17;;;1652:5;;;;;;;;;;1667:4;1674:7;1634:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1751:109;;;;;;;;1778:7;1751:109;;;;1799:9;1751:109;;;;1822:8;1751:109;;;;;;1844:6;1751:109;;;1727:14;:21;1742:5;;;;;;;;;;;1727:21;;;;;;;;;;;;;;;:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:8;1871:187;;;1952:1;1929:12;:19;1942:5;;;;;;;;;;;1929:19;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1871:187;;;2041:6;2037:1;:10;;;;:::i;:::-;2014:12;:19;2027:5;;;;;;;;;;;2014:19;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1871:187;1010:1054;;;;:::o;403:24::-;;;;;;;;;;;;;:::o;2278:164::-;2324:4;2375:1;2344:14;:21;2359:5;;;;;;;;;;;2344:21;;;;;;;;;;;;;;;:28;;;:32;2340:74;;;2399:4;2392:11;;;;2340:74;2430:5;2423:12;;2278:164;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:126::-;1434:7;1474:42;1467:5;1463:54;1452:65;;1397:126;;;:::o;1529:60::-;1557:3;1578:5;1571:12;;1529:60;;;:::o;1595:142::-;1645:9;1678:53;1696:34;1705:24;1723:5;1705:24;:::i;:::-;1696:34;:::i;:::-;1678:53;:::i;:::-;1665:66;;1595:142;;;:::o;1743:126::-;1793:9;1826:37;1857:5;1826:37;:::i;:::-;1813:50;;1743:126;;;:::o;1875:140::-;1939:9;1972:37;2003:5;1972:37;:::i;:::-;1959:50;;1875:140;;;:::o;2021:159::-;2122:51;2167:5;2122:51;:::i;:::-;2117:3;2110:64;2021:159;;:::o;2186:250::-;2293:4;2331:2;2320:9;2316:18;2308:26;;2344:85;2426:1;2415:9;2411:17;2402:6;2344:85;:::i;:::-;2186:250;;;;:::o;2523:117::-;2632:1;2629;2622:12;2769:96;2806:7;2835:24;2853:5;2835:24;:::i;:::-;2824:35;;2769:96;;;:::o;2871:122::-;2944:24;2962:5;2944:24;:::i;:::-;2937:5;2934:35;2924:63;;2983:1;2980;2973:12;2924:63;2871:122;:::o;2999:139::-;3045:5;3083:6;3070:20;3061:29;;3099:33;3126:5;3099:33;:::i;:::-;2999:139;;;;:::o;3144:329::-;3203:6;3252:2;3240:9;3231:7;3227:23;3223:32;3220:119;;;3258:79;;:::i;:::-;3220:119;3378:1;3403:53;3448:7;3439:6;3428:9;3424:22;3403:53;:::i;:::-;3393:63;;3349:117;3144:329;;;;:::o;3479:77::-;3516:7;3545:5;3534:16;;3479:77;;;:::o;3562:118::-;3649:24;3667:5;3649:24;:::i;:::-;3644:3;3637:37;3562:118;;:::o;3686:222::-;3779:4;3817:2;3806:9;3802:18;3794:26;;3830:71;3898:1;3887:9;3883:17;3874:6;3830:71;:::i;:::-;3686:222;;;;:::o;3914:90::-;3948:7;3991:5;3984:13;3977:21;3966:32;;3914:90;;;:::o;4010:109::-;4091:21;4106:5;4091:21;:::i;:::-;4086:3;4079:34;4010:109;;:::o;4125:541::-;4296:4;4334:3;4323:9;4319:19;4311:27;;4348:71;4416:1;4405:9;4401:17;4392:6;4348:71;:::i;:::-;4429:72;4497:2;4486:9;4482:18;4473:6;4429:72;:::i;:::-;4511:66;4573:2;4562:9;4558:18;4549:6;4511:66;:::i;:::-;4587:72;4655:2;4644:9;4640:18;4631:6;4587:72;:::i;:::-;4125:541;;;;;;;:::o;4672:122::-;4745:24;4763:5;4745:24;:::i;:::-;4738:5;4735:35;4725:63;;4784:1;4781;4774:12;4725:63;4672:122;:::o;4800:139::-;4846:5;4884:6;4871:20;4862:29;;4900:33;4927:5;4900:33;:::i;:::-;4800:139;;;;:::o;4945:116::-;5015:21;5030:5;5015:21;:::i;:::-;5008:5;5005:32;4995:60;;5051:1;5048;5041:12;4995:60;4945:116;:::o;5067:133::-;5110:5;5148:6;5135:20;5126:29;;5164:30;5188:5;5164:30;:::i;:::-;5067:133;;;;:::o;5206:759::-;5289:6;5297;5305;5313;5362:3;5350:9;5341:7;5337:23;5333:33;5330:120;;;5369:79;;:::i;:::-;5330:120;5489:1;5514:53;5559:7;5550:6;5539:9;5535:22;5514:53;:::i;:::-;5504:63;;5460:117;5616:2;5642:53;5687:7;5678:6;5667:9;5663:22;5642:53;:::i;:::-;5632:63;;5587:118;5744:2;5770:50;5812:7;5803:6;5792:9;5788:22;5770:50;:::i;:::-;5760:60;;5715:115;5869:2;5895:53;5940:7;5931:6;5920:9;5916:22;5895:53;:::i;:::-;5885:63;;5840:118;5206:759;;;;;;;:::o;5971:142::-;6037:9;6070:37;6101:5;6070:37;:::i;:::-;6057:50;;5971:142;;;:::o;6119:163::-;6222:53;6269:5;6222:53;:::i;:::-;6217:3;6210:66;6119:163;;:::o;6288:254::-;6397:4;6435:2;6424:9;6420:18;6412:26;;6448:87;6532:1;6521:9;6517:17;6508:6;6448:87;:::i;:::-;6288:254;;;;:::o;6548:180::-;6596:77;6593:1;6586:88;6693:4;6690:1;6683:15;6717:4;6714:1;6707:15;6734:320;6778:6;6815:1;6809:4;6805:12;6795:22;;6862:1;6856:4;6852:12;6883:18;6873:81;;6939:4;6931:6;6927:17;6917:27;;6873:81;7001:2;6993:6;6990:14;6970:18;6967:38;6964:84;;;7020:18;;:::i;:::-;6964:84;6785:269;6734:320;;;:::o;7060:177::-;7200:29;7196:1;7188:6;7184:14;7177:53;7060:177;:::o;7243:366::-;7385:3;7406:67;7470:2;7465:3;7406:67;:::i;:::-;7399:74;;7482:93;7571:3;7482:93;:::i;:::-;7600:2;7595:3;7591:12;7584:19;;7243:366;;;:::o;7615:419::-;7781:4;7819:2;7808:9;7804:18;7796:26;;7868:9;7862:4;7858:20;7854:1;7843:9;7839:17;7832:47;7896:131;8022:4;7896:131;:::i;:::-;7888:139;;7615:419;;;:::o;8040:222::-;8180:34;8176:1;8168:6;8164:14;8157:58;8249:5;8244:2;8236:6;8232:15;8225:30;8040:222;:::o;8268:366::-;8410:3;8431:67;8495:2;8490:3;8431:67;:::i;:::-;8424:74;;8507:93;8596:3;8507:93;:::i;:::-;8625:2;8620:3;8616:12;8609:19;;8268:366;;;:::o;8640:419::-;8806:4;8844:2;8833:9;8829:18;8821:26;;8893:9;8887:4;8883:20;8879:1;8868:9;8864:17;8857:47;8921:131;9047:4;8921:131;:::i;:::-;8913:139;;8640:419;;;:::o;9065:233::-;9205:34;9201:1;9193:6;9189:14;9182:58;9274:16;9269:2;9261:6;9257:15;9250:41;9065:233;:::o;9304:366::-;9446:3;9467:67;9531:2;9526:3;9467:67;:::i;:::-;9460:74;;9543:93;9632:3;9543:93;:::i;:::-;9661:2;9656:3;9652:12;9645:19;;9304:366;;;:::o;9676:419::-;9842:4;9880:2;9869:9;9865:18;9857:26;;9929:9;9923:4;9919:20;9915:1;9904:9;9900:17;9893:47;9957:131;10083:4;9957:131;:::i;:::-;9949:139;;9676:419;;;:::o;10101:230::-;10241:34;10237:1;10229:6;10225:14;10218:58;10310:13;10305:2;10297:6;10293:15;10286:38;10101:230;:::o;10337:366::-;10479:3;10500:67;10564:2;10559:3;10500:67;:::i;:::-;10493:74;;10576:93;10665:3;10576:93;:::i;:::-;10694:2;10689:3;10685:12;10678:19;;10337:366;;;:::o;10709:419::-;10875:4;10913:2;10902:9;10898:18;10890:26;;10962:9;10956:4;10952:20;10948:1;10937:9;10933:17;10926:47;10990:131;11116:4;10990:131;:::i;:::-;10982:139;;10709:419;;;:::o;11134:118::-;11221:24;11239:5;11221:24;:::i;:::-;11216:3;11209:37;11134:118;;:::o;11258:442::-;11407:4;11445:2;11434:9;11430:18;11422:26;;11458:71;11526:1;11515:9;11511:17;11502:6;11458:71;:::i;:::-;11539:72;11607:2;11596:9;11592:18;11583:6;11539:72;:::i;:::-;11621;11689:2;11678:9;11674:18;11665:6;11621:72;:::i;:::-;11258:442;;;;;;:::o;11706:137::-;11760:5;11791:6;11785:13;11776:22;;11807:30;11831:5;11807:30;:::i;:::-;11706:137;;;;:::o;11849:345::-;11916:6;11965:2;11953:9;11944:7;11940:23;11936:32;11933:119;;;11971:79;;:::i;:::-;11933:119;12091:1;12116:61;12169:7;12160:6;12149:9;12145:22;12116:61;:::i;:::-;12106:71;;12062:125;11849:345;;;;:::o;12200:180::-;12248:77;12245:1;12238:88;12345:4;12342:1;12335:15;12369:4;12366:1;12359:15;12386:305;12426:3;12445:20;12463:1;12445:20;:::i;:::-;12440:25;;12479:20;12497:1;12479:20;:::i;:::-;12474:25;;12633:1;12565:66;12561:74;12558:1;12555:81;12552:107;;;12639:18;;:::i;:::-;12552:107;12683:1;12680;12676:9;12669:16;;12386:305;;;;:::o;12697:348::-;12737:7;12760:20;12778:1;12760:20;:::i;:::-;12755:25;;12794:20;12812:1;12794:20;:::i;:::-;12789:25;;12982:1;12914:66;12910:74;12907:1;12904:81;12899:1;12892:9;12885:17;12881:105;12878:131;;;12989:18;;:::i;:::-;12878:131;13037:1;13034;13030:9;13019:20;;12697:348;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./IERC20.sol\";\nimport \"./MattCoin.sol\";\n\nlibrary Library {\n    struct stake {\n        uint256 amount;\n        uint256 timestamp;\n        bool flexible;\n        uint256 period; // for locked staking\n    }\n}\n\ncontract BankToken {\n    address private owner;\n\n    string public name = \"stake Bank Token\";\n    IERC20 public cUSD;\n    MattCoin public mattCoin;\n\n    using Library for Library.stake;\n    mapping(address => Library.stake) public stakingBalance;\n    mapping(address => uint256) public pendingCoins;\n\n    // constructor\n\n    // cUSD (Alfajores testnet) = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\"\n    // cUSD (Celo mainnet) =      \"0x765DE816845861e75A25fCA122bb6898B8B1282a\"\n    constructor(MattCoin _mattCoin, IERC20 _cUSD) {\n        owner = msg.sender;\n        mattCoin = _mattCoin;\n        cUSD = _cUSD;\n    }\n\n    // fallback function (if exists)\n\n    // external\n\n    // public\n\n    // 1 stakes Tokens (get rewards)\n    function stakeTokens(\n        uint256 _amount,\n        uint256 timestamp,\n        bool flexible,\n        uint256 period\n    ) public {\n        require(_amount > 0, \"amount needs to be positive\"); // raise ex if is false\n        require(ownerStaking(), \"only 1 stake per account is allowed\");\n\n        if (flexible) {\n            require(\n                period == 0,\n                \"flexible staking should not have fixed periods\"\n            );\n        } else {\n            require(period > 0, \"locked staking should have positive periods\");\n        }\n\n        // Trasnfer cUSD tokens to this contract for staking\n        cUSD.transferFrom(owner, address(this), _amount);\n\n        // update staking balance\n        stakingBalance[owner] = Library.stake(\n            _amount,\n            timestamp,\n            flexible,\n            period\n        );\n\n        if (flexible) {\n            // give 1 per day\n            pendingCoins[owner] += 1;\n        } else {\n            // give 2 per day\n            pendingCoins[owner] += 2 * period;\n        }\n    }\n\n    function ownerFlexibleStaking() private view returns (bool) {\n        if (stakingBalance[owner].flexible) {\n            return true;\n        }\n        return false;\n    }\n\n    // internal\n    // private\n\n    function ownerStaking() private view returns (bool) {\n        if (stakingBalance[owner].amount > 0) {\n            return true;\n        }\n        return false;\n    }\n}\n",
  "sourcePath": "/Users/mberrueta/code/courses/blockchain/tutorials/celo/celo_dev101_challenge/contracts/BankToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/BankToken.sol",
    "exportedSymbols": {
      "BankToken": [
        179
      ],
      "IERC20": [
        438
      ],
      "Library": [
        13
      ],
      "MattCoin": [
        746
      ]
    },
    "id": 180,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 439,
        "src": "66:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MattCoin.sol",
        "file": "./MattCoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 747,
        "src": "89:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Library",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "Library",
        "nameLocation": "123:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Library.stake",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "168:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "160:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "192:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "184:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "flexible",
                "nameLocation": "216:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "211:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "period",
                "nameLocation": "242:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "234:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "stake",
            "nameLocation": "144:5:0",
            "nodeType": "StructDefinition",
            "scope": 13,
            "src": "137:140:0",
            "visibility": "public"
          }
        ],
        "scope": 180,
        "src": "115:164:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BankToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 179,
        "linearizedBaseContracts": [
          179
        ],
        "name": "BankToken",
        "nameLocation": "290:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "322:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "306:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 18,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "348:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "334:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "334:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "7374616b652042616e6b20546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eeb7d63b11b4a9f0a39a0e902033bc2e62bf9f5d2cb2f1596cf2708df074fd59",
                "typeString": "literal_string \"stake Bank Token\""
              },
              "value": "stake Bank Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fccf672",
            "id": 21,
            "mutability": "mutable",
            "name": "cUSD",
            "nameLocation": "393:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "379:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$438",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 438,
                "src": "379:6:0"
              },
              "referencedDeclaration": 438,
              "src": "379:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$438",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c99463a3",
            "id": 24,
            "mutability": "mutable",
            "name": "mattCoin",
            "nameLocation": "419:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "403:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MattCoin_$746",
              "typeString": "contract MattCoin"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "MattCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 746,
                "src": "403:8:0"
              },
              "referencedDeclaration": 746,
              "src": "403:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MattCoin_$746",
                "typeString": "contract MattCoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "libraryName": {
              "id": 25,
              "name": "Library",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13,
              "src": "440:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "434:32:0",
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Library.stake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "452:13:0"
              },
              "referencedDeclaration": 12,
              "src": "452:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                "typeString": "struct Library.stake"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "512:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "471:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
              "typeString": "mapping(address => struct Library.stake)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                "typeString": "mapping(address => struct Library.stake)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Library.stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "490:13:0"
                },
                "referencedDeclaration": 12,
                "src": "490:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                  "typeString": "struct Library.stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e1fc94",
            "id": 37,
            "mutability": "mutable",
            "name": "pendingCoins",
            "nameLocation": "567:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "532:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "540:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "532:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "551:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "810:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "828:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "820:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "820:18:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "859:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "src": "848:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "848:20:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "878:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "885:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "878:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "878:12:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_mattCoin",
                  "nameLocation": "785:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "776:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MattCoin_$746",
                    "typeString": "contract MattCoin"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "MattCoin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "776:8:0"
                    },
                    "referencedDeclaration": 746,
                    "src": "776:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_cUSD",
                  "nameLocation": "803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "796:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$438",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 42,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 438,
                      "src": "796:6:0"
                    },
                    "referencedDeclaration": 438,
                    "src": "796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:34:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:0"
            },
            "scope": 179,
            "src": "764:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1143:921:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206e6565647320746f20626520706f736974697665",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        },
                        "value": "amount needs to be positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79,
                          "name": "ownerStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "1246:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f776564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        },
                        "value": "only 1 stake per account is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:62:0"
                },
                {
                  "condition": {
                    "id": 84,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1315:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1472:91:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 94,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1494:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1503:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1494:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b6564207374616b696e672073686f756c64206861766520706f73697469766520706572696f6473",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1506:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              },
                              "value": "locked staking should have positive periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1486:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:66:0"
                      }
                    ]
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1311:252:0",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1325:141:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1364:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1374:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1364:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "666c657869626c65207374616b696e672073686f756c64206e6f74206861766520666978656420706572696f6473",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1393:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              },
                              "value": "flexible staking should not have fixed periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              }
                            ],
                            "id": 85,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1339:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1339:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1339:116:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1652:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 108,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1667:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          ],
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1659:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102,
                        "name": "cUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$438",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 419,
                      "src": "1634:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:48:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 113,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1727:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1742:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1727:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 119,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1799:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 120,
                          "name": "flexible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1822:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 121,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 116,
                          "name": "Library",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Library_$13_$",
                            "typeString": "type(library Library)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stake_$12_storage_ptr_$",
                          "typeString": "type(struct Library.stake storage pointer)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:109:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_memory_ptr",
                        "typeString": "struct Library.stake memory"
                      }
                    },
                    "src": "1727:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stake_$12_storage",
                      "typeString": "struct Library.stake storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:133:0"
                },
                {
                  "condition": {
                    "id": 125,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1875:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "1970:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 133,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2014:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 135,
                            "indexExpression": {
                              "id": 134,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2027:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2014:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2037:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 137,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "2041:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2014:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2014:33:0"
                      }
                    ]
                  },
                  "id": 142,
                  "nodeType": "IfStatement",
                  "src": "1871:187:0",
                  "trueBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1885:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 126,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1929:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1942:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1952:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1929:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "76e3a5a4",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1019:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1040:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1073:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "flexible",
                  "nameLocation": "1097:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1092:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1123:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1115:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:105:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:0:0"
            },
            "scope": 179,
            "src": "1010:1054:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2130:110:0",
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 149,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2144:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "id": 150,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2159:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "flexible",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2144:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2140:72:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2176:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 148,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2190:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2228:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 148,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "2221:12:0"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerFlexibleStaking",
            "nameLocation": "2079:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2124:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:6:0"
            },
            "scope": 179,
            "src": "2070:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2330:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 165,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2344:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                            "typeString": "mapping(address => struct Library.stake storage ref)"
                          }
                        },
                        "id": 167,
                        "indexExpression": {
                          "id": 166,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2359:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2344:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_stake_$12_storage",
                          "typeString": "struct Library.stake storage ref"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2344:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2375:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2344:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2340:74:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2378:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2399:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 164,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2392:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2430:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 164,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2423:12:0"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerStaking",
            "nameLocation": "2287:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2324:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:6:0"
            },
            "scope": 179,
            "src": "2278:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 180,
        "src": "281:2163:0",
        "usedErrors": []
      }
    ],
    "src": "32:2413:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BankToken.sol",
    "exportedSymbols": {
      "BankToken": [
        179
      ],
      "IERC20": [
        438
      ],
      "Library": [
        13
      ],
      "MattCoin": [
        746
      ]
    },
    "id": 180,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 439,
        "src": "66:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MattCoin.sol",
        "file": "./MattCoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 747,
        "src": "89:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Library",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "Library",
        "nameLocation": "123:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Library.stake",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "168:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "160:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "192:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "184:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "flexible",
                "nameLocation": "216:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "211:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "period",
                "nameLocation": "242:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "234:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "stake",
            "nameLocation": "144:5:0",
            "nodeType": "StructDefinition",
            "scope": 13,
            "src": "137:140:0",
            "visibility": "public"
          }
        ],
        "scope": 180,
        "src": "115:164:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BankToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 179,
        "linearizedBaseContracts": [
          179
        ],
        "name": "BankToken",
        "nameLocation": "290:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "322:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "306:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 18,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "348:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "334:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "334:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "7374616b652042616e6b20546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eeb7d63b11b4a9f0a39a0e902033bc2e62bf9f5d2cb2f1596cf2708df074fd59",
                "typeString": "literal_string \"stake Bank Token\""
              },
              "value": "stake Bank Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fccf672",
            "id": 21,
            "mutability": "mutable",
            "name": "cUSD",
            "nameLocation": "393:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "379:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$438",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 438,
                "src": "379:6:0"
              },
              "referencedDeclaration": 438,
              "src": "379:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$438",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c99463a3",
            "id": 24,
            "mutability": "mutable",
            "name": "mattCoin",
            "nameLocation": "419:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "403:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MattCoin_$746",
              "typeString": "contract MattCoin"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "MattCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 746,
                "src": "403:8:0"
              },
              "referencedDeclaration": 746,
              "src": "403:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MattCoin_$746",
                "typeString": "contract MattCoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "libraryName": {
              "id": 25,
              "name": "Library",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13,
              "src": "440:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "434:32:0",
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Library.stake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "452:13:0"
              },
              "referencedDeclaration": 12,
              "src": "452:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                "typeString": "struct Library.stake"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "512:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "471:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
              "typeString": "mapping(address => struct Library.stake)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                "typeString": "mapping(address => struct Library.stake)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Library.stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "490:13:0"
                },
                "referencedDeclaration": 12,
                "src": "490:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                  "typeString": "struct Library.stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e1fc94",
            "id": 37,
            "mutability": "mutable",
            "name": "pendingCoins",
            "nameLocation": "567:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "532:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "540:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "532:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "551:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "810:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "828:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "820:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "820:18:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "859:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "src": "848:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "848:20:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "878:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "885:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "878:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "878:12:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_mattCoin",
                  "nameLocation": "785:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "776:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MattCoin_$746",
                    "typeString": "contract MattCoin"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "MattCoin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "776:8:0"
                    },
                    "referencedDeclaration": 746,
                    "src": "776:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_cUSD",
                  "nameLocation": "803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "796:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$438",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 42,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 438,
                      "src": "796:6:0"
                    },
                    "referencedDeclaration": 438,
                    "src": "796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:34:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:0"
            },
            "scope": 179,
            "src": "764:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1143:921:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206e6565647320746f20626520706f736974697665",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        },
                        "value": "amount needs to be positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79,
                          "name": "ownerStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "1246:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f776564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        },
                        "value": "only 1 stake per account is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:62:0"
                },
                {
                  "condition": {
                    "id": 84,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1315:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1472:91:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 94,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1494:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1503:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1494:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b6564207374616b696e672073686f756c64206861766520706f73697469766520706572696f6473",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1506:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              },
                              "value": "locked staking should have positive periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1486:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:66:0"
                      }
                    ]
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1311:252:0",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1325:141:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1364:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1374:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1364:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "666c657869626c65207374616b696e672073686f756c64206e6f74206861766520666978656420706572696f6473",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1393:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              },
                              "value": "flexible staking should not have fixed periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              }
                            ],
                            "id": 85,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1339:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1339:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1339:116:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1652:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 108,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1667:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          ],
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1659:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102,
                        "name": "cUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$438",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 419,
                      "src": "1634:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:48:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 113,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1727:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1742:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1727:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 119,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1799:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 120,
                          "name": "flexible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1822:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 121,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 116,
                          "name": "Library",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Library_$13_$",
                            "typeString": "type(library Library)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stake_$12_storage_ptr_$",
                          "typeString": "type(struct Library.stake storage pointer)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:109:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_memory_ptr",
                        "typeString": "struct Library.stake memory"
                      }
                    },
                    "src": "1727:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stake_$12_storage",
                      "typeString": "struct Library.stake storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:133:0"
                },
                {
                  "condition": {
                    "id": 125,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1875:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "1970:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 133,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2014:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 135,
                            "indexExpression": {
                              "id": 134,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2027:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2014:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2037:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 137,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "2041:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2014:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2014:33:0"
                      }
                    ]
                  },
                  "id": 142,
                  "nodeType": "IfStatement",
                  "src": "1871:187:0",
                  "trueBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1885:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 126,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1929:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1942:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1952:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1929:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "76e3a5a4",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1019:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1040:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1073:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "flexible",
                  "nameLocation": "1097:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1092:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1123:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1115:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:105:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:0:0"
            },
            "scope": 179,
            "src": "1010:1054:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2130:110:0",
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 149,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2144:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "id": 150,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2159:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "flexible",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2144:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2140:72:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2176:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 148,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2190:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2228:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 148,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "2221:12:0"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerFlexibleStaking",
            "nameLocation": "2079:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2124:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:6:0"
            },
            "scope": 179,
            "src": "2070:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2330:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 165,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2344:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                            "typeString": "mapping(address => struct Library.stake storage ref)"
                          }
                        },
                        "id": 167,
                        "indexExpression": {
                          "id": 166,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2359:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2344:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_stake_$12_storage",
                          "typeString": "struct Library.stake storage ref"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2344:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2375:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2344:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2340:74:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2378:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2399:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 164,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2392:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2430:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 164,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2423:12:0"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerStaking",
            "nameLocation": "2287:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2324:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:6:0"
            },
            "scope": 179,
            "src": "2278:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 180,
        "src": "281:2163:0",
        "usedErrors": []
      }
    ],
    "src": "32:2413:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8807998B2ba8bC33907D6a991A8f8D1bEc688cf4",
      "transactionHash": "0xec649f9dbdd7c7e0be4d196c92376b6811810d97e8e2932a962958ff1bc782f4"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-22T15:11:47.944Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}