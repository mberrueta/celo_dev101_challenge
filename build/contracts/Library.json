{
  "contractName": "Library",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BankToken.sol\":\"Library\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/BankToken.sol\":{\"keccak256\":\"0x7eb7737e240416c17a69feb112663da0ef1de249982d79c1d8d165973d07bc3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94cec3f3de5a0ec353a3196dd7cc24c2b362542ad23a4c4d615da43ba90cc195\",\"dweb:/ipfs/QmP8joEw9LLeJCFcsS9wdYd13Yd8p4vwDUKQmVS9m8qhEQ\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xec39881b4e37f6e9ca267d1b9e49c1980cd087bdf8a839c52567cf258ef0580a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4549eb22c075a850906848485142d5dae9656ca41c3c21b48cc1467eaf17c4c3\",\"dweb:/ipfs/QmV1CRXnWJoHqFQM97HK7zC7mC6seQTRDFrn71VgY4MNrH\"]},\"project:/contracts/MattCoin.sol\":{\"keccak256\":\"0x262c8aa158463b7793d9efbbbea1902cfb351552a6106323a6eb1d541d86dc09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d6b0bf1ce23a2e1f68831ff65c21e10e1774655baef2d53b1d77224ba62e8cb\",\"dweb:/ipfs/QmUWk892kLfEDMfgSoPJt62EeLjmGfry6biT6uznjuiEzc\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7b0a0cd99bdca2666e06dfc82e6670d34300ca958ae5377035aae26a835e01064736f6c63430008090033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7b0a0cd99bdca2666e06dfc82e6670d34300ca958ae5377035aae26a835e01064736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "115:164:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "115:164:0:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./IERC20.sol\";\nimport \"./MattCoin.sol\";\n\nlibrary Library {\n    struct stake {\n        uint256 amount;\n        uint256 timestamp;\n        bool flexible;\n        uint256 period; // for locked staking\n    }\n}\n\ncontract BankToken {\n    address private owner;\n\n    string public name = \"stake Bank Token\";\n    IERC20 public cUSD;\n    MattCoin public mattCoin;\n\n    using Library for Library.stake;\n    mapping(address => Library.stake) public stakingBalance;\n    mapping(address => uint256) public pendingCoins;\n\n    // constructor\n\n    // cUSD (Alfajores testnet) = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\"\n    // cUSD (Celo mainnet) =      \"0x765DE816845861e75A25fCA122bb6898B8B1282a\"\n    constructor(MattCoin _mattCoin, IERC20 _cUSD) {\n        owner = msg.sender;\n        mattCoin = _mattCoin;\n        cUSD = _cUSD;\n    }\n\n    // fallback function (if exists)\n\n    // external\n\n    // public\n\n    // 1 stakes Tokens (get rewards)\n    function stakeTokens(\n        uint256 _amount,\n        uint256 timestamp,\n        bool flexible,\n        uint256 period\n    ) public {\n        require(_amount > 0, \"amount needs to be positive\"); // raise ex if is false\n        require(ownerStaking(), \"only 1 stake per account is allowed\");\n\n        if (flexible) {\n            require(\n                period == 0,\n                \"flexible staking should not have fixed periods\"\n            );\n        } else {\n            require(period > 0, \"locked staking should have positive periods\");\n        }\n\n        // Trasnfer cUSD tokens to this contract for staking\n        cUSD.transferFrom(owner, address(this), _amount);\n\n        // update staking balance\n        stakingBalance[owner] = Library.stake(\n            _amount,\n            timestamp,\n            flexible,\n            period\n        );\n\n        if (flexible) {\n            // give 1 per day\n            pendingCoins[owner] += 1;\n        } else {\n            // give 2 per day\n            pendingCoins[owner] += 2 * period;\n        }\n    }\n\n    function ownerFlexibleStaking() private view returns (bool) {\n        if (stakingBalance[owner].flexible) {\n            return true;\n        }\n        return false;\n    }\n\n    // internal\n    // private\n\n    function ownerStaking() private view returns (bool) {\n        if (stakingBalance[owner].amount > 0) {\n            return true;\n        }\n        return false;\n    }\n}\n",
  "sourcePath": "/Users/mberrueta/code/courses/blockchain/tutorials/celo/celo_dev101_challenge/contracts/BankToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/BankToken.sol",
    "exportedSymbols": {
      "BankToken": [
        179
      ],
      "IERC20": [
        438
      ],
      "Library": [
        13
      ],
      "MattCoin": [
        746
      ]
    },
    "id": 180,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 439,
        "src": "66:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MattCoin.sol",
        "file": "./MattCoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 747,
        "src": "89:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Library",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "Library",
        "nameLocation": "123:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Library.stake",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "168:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "160:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "192:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "184:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "flexible",
                "nameLocation": "216:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "211:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "period",
                "nameLocation": "242:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "234:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "stake",
            "nameLocation": "144:5:0",
            "nodeType": "StructDefinition",
            "scope": 13,
            "src": "137:140:0",
            "visibility": "public"
          }
        ],
        "scope": 180,
        "src": "115:164:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BankToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 179,
        "linearizedBaseContracts": [
          179
        ],
        "name": "BankToken",
        "nameLocation": "290:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "322:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "306:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 18,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "348:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "334:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "334:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "7374616b652042616e6b20546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eeb7d63b11b4a9f0a39a0e902033bc2e62bf9f5d2cb2f1596cf2708df074fd59",
                "typeString": "literal_string \"stake Bank Token\""
              },
              "value": "stake Bank Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fccf672",
            "id": 21,
            "mutability": "mutable",
            "name": "cUSD",
            "nameLocation": "393:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "379:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$438",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 438,
                "src": "379:6:0"
              },
              "referencedDeclaration": 438,
              "src": "379:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$438",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c99463a3",
            "id": 24,
            "mutability": "mutable",
            "name": "mattCoin",
            "nameLocation": "419:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "403:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MattCoin_$746",
              "typeString": "contract MattCoin"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "MattCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 746,
                "src": "403:8:0"
              },
              "referencedDeclaration": 746,
              "src": "403:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MattCoin_$746",
                "typeString": "contract MattCoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "libraryName": {
              "id": 25,
              "name": "Library",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13,
              "src": "440:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "434:32:0",
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Library.stake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "452:13:0"
              },
              "referencedDeclaration": 12,
              "src": "452:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                "typeString": "struct Library.stake"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "512:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "471:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
              "typeString": "mapping(address => struct Library.stake)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                "typeString": "mapping(address => struct Library.stake)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Library.stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "490:13:0"
                },
                "referencedDeclaration": 12,
                "src": "490:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                  "typeString": "struct Library.stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e1fc94",
            "id": 37,
            "mutability": "mutable",
            "name": "pendingCoins",
            "nameLocation": "567:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "532:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "540:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "532:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "551:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "810:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "828:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "820:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "820:18:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "859:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "src": "848:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "848:20:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "878:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "885:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "878:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "878:12:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_mattCoin",
                  "nameLocation": "785:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "776:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MattCoin_$746",
                    "typeString": "contract MattCoin"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "MattCoin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "776:8:0"
                    },
                    "referencedDeclaration": 746,
                    "src": "776:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_cUSD",
                  "nameLocation": "803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "796:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$438",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 42,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 438,
                      "src": "796:6:0"
                    },
                    "referencedDeclaration": 438,
                    "src": "796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:34:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:0"
            },
            "scope": 179,
            "src": "764:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1143:921:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206e6565647320746f20626520706f736974697665",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        },
                        "value": "amount needs to be positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79,
                          "name": "ownerStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "1246:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f776564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        },
                        "value": "only 1 stake per account is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:62:0"
                },
                {
                  "condition": {
                    "id": 84,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1315:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1472:91:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 94,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1494:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1503:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1494:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b6564207374616b696e672073686f756c64206861766520706f73697469766520706572696f6473",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1506:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              },
                              "value": "locked staking should have positive periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1486:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:66:0"
                      }
                    ]
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1311:252:0",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1325:141:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1364:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1374:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1364:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "666c657869626c65207374616b696e672073686f756c64206e6f74206861766520666978656420706572696f6473",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1393:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              },
                              "value": "flexible staking should not have fixed periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              }
                            ],
                            "id": 85,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1339:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1339:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1339:116:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1652:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 108,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1667:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          ],
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1659:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102,
                        "name": "cUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$438",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 419,
                      "src": "1634:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:48:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 113,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1727:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1742:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1727:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 119,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1799:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 120,
                          "name": "flexible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1822:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 121,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 116,
                          "name": "Library",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Library_$13_$",
                            "typeString": "type(library Library)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stake_$12_storage_ptr_$",
                          "typeString": "type(struct Library.stake storage pointer)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:109:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_memory_ptr",
                        "typeString": "struct Library.stake memory"
                      }
                    },
                    "src": "1727:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stake_$12_storage",
                      "typeString": "struct Library.stake storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:133:0"
                },
                {
                  "condition": {
                    "id": 125,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1875:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "1970:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 133,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2014:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 135,
                            "indexExpression": {
                              "id": 134,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2027:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2014:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2037:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 137,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "2041:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2014:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2014:33:0"
                      }
                    ]
                  },
                  "id": 142,
                  "nodeType": "IfStatement",
                  "src": "1871:187:0",
                  "trueBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1885:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 126,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1929:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1942:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1952:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1929:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "76e3a5a4",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1019:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1040:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1073:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "flexible",
                  "nameLocation": "1097:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1092:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1123:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1115:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:105:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:0:0"
            },
            "scope": 179,
            "src": "1010:1054:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2130:110:0",
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 149,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2144:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "id": 150,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2159:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "flexible",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2144:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2140:72:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2176:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 148,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2190:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2228:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 148,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "2221:12:0"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerFlexibleStaking",
            "nameLocation": "2079:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2124:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:6:0"
            },
            "scope": 179,
            "src": "2070:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2330:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 165,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2344:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                            "typeString": "mapping(address => struct Library.stake storage ref)"
                          }
                        },
                        "id": 167,
                        "indexExpression": {
                          "id": 166,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2359:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2344:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_stake_$12_storage",
                          "typeString": "struct Library.stake storage ref"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2344:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2375:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2344:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2340:74:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2378:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2399:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 164,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2392:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2430:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 164,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2423:12:0"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerStaking",
            "nameLocation": "2287:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2324:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:6:0"
            },
            "scope": 179,
            "src": "2278:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 180,
        "src": "281:2163:0",
        "usedErrors": []
      }
    ],
    "src": "32:2413:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BankToken.sol",
    "exportedSymbols": {
      "BankToken": [
        179
      ],
      "IERC20": [
        438
      ],
      "Library": [
        13
      ],
      "MattCoin": [
        746
      ]
    },
    "id": 180,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 439,
        "src": "66:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MattCoin.sol",
        "file": "./MattCoin.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 180,
        "sourceUnit": 747,
        "src": "89:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Library",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "Library",
        "nameLocation": "123:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Library.stake",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "168:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "160:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "192:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "184:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "184:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "flexible",
                "nameLocation": "216:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "211:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "period",
                "nameLocation": "242:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "234:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "stake",
            "nameLocation": "144:5:0",
            "nodeType": "StructDefinition",
            "scope": 13,
            "src": "137:140:0",
            "visibility": "public"
          }
        ],
        "scope": 180,
        "src": "115:164:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BankToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 179,
        "linearizedBaseContracts": [
          179
        ],
        "name": "BankToken",
        "nameLocation": "290:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "322:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "306:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 18,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "348:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "334:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "334:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "7374616b652042616e6b20546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_eeb7d63b11b4a9f0a39a0e902033bc2e62bf9f5d2cb2f1596cf2708df074fd59",
                "typeString": "literal_string \"stake Bank Token\""
              },
              "value": "stake Bank Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1fccf672",
            "id": 21,
            "mutability": "mutable",
            "name": "cUSD",
            "nameLocation": "393:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "379:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$438",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 438,
                "src": "379:6:0"
              },
              "referencedDeclaration": 438,
              "src": "379:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$438",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c99463a3",
            "id": 24,
            "mutability": "mutable",
            "name": "mattCoin",
            "nameLocation": "419:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "403:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MattCoin_$746",
              "typeString": "contract MattCoin"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "MattCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 746,
                "src": "403:8:0"
              },
              "referencedDeclaration": 746,
              "src": "403:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MattCoin_$746",
                "typeString": "contract MattCoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "libraryName": {
              "id": 25,
              "name": "Library",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13,
              "src": "440:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "434:32:0",
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Library.stake",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "452:13:0"
              },
              "referencedDeclaration": 12,
              "src": "452:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                "typeString": "struct Library.stake"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 33,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "512:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "471:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
              "typeString": "mapping(address => struct Library.stake)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "479:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "471:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                "typeString": "mapping(address => struct Library.stake)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "Library.stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "490:13:0"
                },
                "referencedDeclaration": 12,
                "src": "490:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_stake_$12_storage_ptr",
                  "typeString": "struct Library.stake"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20e1fc94",
            "id": 37,
            "mutability": "mutable",
            "name": "pendingCoins",
            "nameLocation": "567:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 179,
            "src": "532:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "540:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "532:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "551:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "810:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "820:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 47,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "828:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "820:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "820:18:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "848:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_mattCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "859:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MattCoin_$746",
                        "typeString": "contract MattCoin"
                      }
                    },
                    "src": "848:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "848:20:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "878:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_cUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "885:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$438",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "878:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "878:12:0"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_mattCoin",
                  "nameLocation": "785:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "776:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MattCoin_$746",
                    "typeString": "contract MattCoin"
                  },
                  "typeName": {
                    "id": 39,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38,
                      "name": "MattCoin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 746,
                      "src": "776:8:0"
                    },
                    "referencedDeclaration": 746,
                    "src": "776:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MattCoin_$746",
                      "typeString": "contract MattCoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_cUSD",
                  "nameLocation": "803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "796:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$438",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 42,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 438,
                      "src": "796:6:0"
                    },
                    "referencedDeclaration": 438,
                    "src": "796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$438",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:34:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:0:0"
            },
            "scope": 179,
            "src": "764:133:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1143:921:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206e6565647320746f20626520706f736974697665",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        },
                        "value": "amount needs to be positive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce9e5fbf7f431056bf5692beda343f4c3c23433ec585182a0c9d2d8b5ed78d81",
                          "typeString": "literal_string \"amount needs to be positive\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79,
                          "name": "ownerStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "1246:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792031207374616b6520706572206163636f756e7420697320616c6c6f776564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        },
                        "value": "only 1 stake per account is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f93af11fd07a2af64f9e7b72ccdbbd66ee4e5d9fbb47b969ad27721cad442ca4",
                          "typeString": "literal_string \"only 1 stake per account is allowed\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:62:0"
                },
                {
                  "condition": {
                    "id": 84,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1315:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1472:91:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 94,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1494:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1503:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1494:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b6564207374616b696e672073686f756c64206861766520706f73697469766520706572696f6473",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1506:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              },
                              "value": "locked staking should have positive periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e056d2b92ea6c85d22581371b373f538d1cbb2ef5bf53bbb710be573ffa9ce2",
                                "typeString": "literal_string \"locked staking should have positive periods\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1486:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:66:0"
                      }
                    ]
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1311:252:0",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1325:141:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68,
                                "src": "1364:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1374:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1364:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "666c657869626c65207374616b696e672073686f756c64206e6f74206861766520666978656420706572696f6473",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1393:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              },
                              "value": "flexible staking should not have fixed periods"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3efb7f6ebe1d8fdd605e564064c3ae0b1fe989ad87a106168057106c54c90884",
                                "typeString": "literal_string \"flexible staking should not have fixed periods\""
                              }
                            ],
                            "id": 85,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1339:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1339:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "1339:116:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1652:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 108,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1667:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankToken_$179",
                              "typeString": "contract BankToken"
                            }
                          ],
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1659:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1674:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102,
                        "name": "cUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$438",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 419,
                      "src": "1634:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:48:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 113,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1727:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1742:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1727:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 119,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1799:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 120,
                          "name": "flexible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1822:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 121,
                          "name": "period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 116,
                          "name": "Library",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Library_$13_$",
                            "typeString": "type(library Library)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stake_$12_storage_ptr_$",
                          "typeString": "type(struct Library.stake storage pointer)"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1751:109:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_memory_ptr",
                        "typeString": "struct Library.stake memory"
                      }
                    },
                    "src": "1727:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stake_$12_storage",
                      "typeString": "struct Library.stake storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:133:0"
                },
                {
                  "condition": {
                    "id": 125,
                    "name": "flexible",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1875:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "1970:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 133,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "2014:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 135,
                            "indexExpression": {
                              "id": 134,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2027:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2014:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2037:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 137,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "2041:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2014:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "2014:33:0"
                      }
                    ]
                  },
                  "id": 142,
                  "nodeType": "IfStatement",
                  "src": "1871:187:0",
                  "trueBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1885:79:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 126,
                              "name": "pendingCoins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1929:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1942:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1952:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1929:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "76e3a5a4",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "1019:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1040:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1073:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1065:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "flexible",
                  "nameLocation": "1097:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1092:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1123:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1115:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:105:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:0:0"
            },
            "scope": 179,
            "src": "1010:1054:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "2130:110:0",
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 149,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2144:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                          "typeString": "mapping(address => struct Library.stake storage ref)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "id": 150,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2159:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2144:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stake_$12_storage",
                        "typeString": "struct Library.stake storage ref"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "flexible",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2144:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "IfStatement",
                  "src": "2140:72:0",
                  "trueBody": {
                    "id": 155,
                    "nodeType": "Block",
                    "src": "2176:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 148,
                        "id": 154,
                        "nodeType": "Return",
                        "src": "2190:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2228:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 148,
                  "id": 158,
                  "nodeType": "Return",
                  "src": "2221:12:0"
                }
              ]
            },
            "id": 160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerFlexibleStaking",
            "nameLocation": "2079:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2124:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:6:0"
            },
            "scope": 179,
            "src": "2070:170:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2330:112:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 165,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2344:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stake_$12_storage_$",
                            "typeString": "mapping(address => struct Library.stake storage ref)"
                          }
                        },
                        "id": 167,
                        "indexExpression": {
                          "id": 166,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2359:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2344:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_stake_$12_storage",
                          "typeString": "struct Library.stake storage ref"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2344:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2375:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2344:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2340:74:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2378:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2399:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 164,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "2392:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2430:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 164,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2423:12:0"
                }
              ]
            },
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerStaking",
            "nameLocation": "2287:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2324:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2323:6:0"
            },
            "scope": 179,
            "src": "2278:164:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 180,
        "src": "281:2163:0",
        "usedErrors": []
      }
    ],
    "src": "32:2413:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-22T15:11:44.662Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}